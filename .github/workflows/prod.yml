# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "prod" branch
  push:
    branches: [ "prod" ]
  pull_request:
    branches: [ "prod" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Determine version
        id: version
        run: |
          # Your versioning logic here
          # Example: Increment the version based on conventional commit messages
          current_version=$(cat version.txt)
          echo "$current_version"
          commit_messages=$(git log --format=%B ${{ github.event.before }}..HEAD)
          
          if [[ $commit_messages == *"[break]"* ]]; then
             new_version=$(echo $current_version | awk -F. -v OFS=. '{++$1; $2=0; $3=0; print}')
           elif [[ $commit_messages == *"[feat]"* ]]; then
             new_version=$(echo $current_version | awk -F. -v OFS=. '{++$2; $3=0; print}')
           else
             new_version=$(echo $current_version | awk -F. -v OFS=. '{$3+=1; print}')
           fi

           echo "New version: $new_version"
           echo "::set-output name=VERSION::$new_version"
